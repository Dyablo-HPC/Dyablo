#
# We provide two type of documentation :
# - regular Doxygen
# - a static website (written in markdown) generated by MkDocs
#
# To generate the static webpage, you need to have mkdocs installed
# e.g. :
#     conda install -c conda-forge mkdocs
#
# Here in this cmake, we do not check if mkdocs is installed,
# we just emit a warning message if it is not available
#
# the mkdocs target here, generate most of the markdown sources, using
# an additionnal tool, doxybook2 to convert doxygen xml input into
# markdown

#
# Find Doxygen
#
find_package(Doxygen
  REQUIRED dot
  OPTIONAL_COMPONENTS mscgen dia)

if(NOT DOXYGEN_FOUND)
  message(WARNING "Doxygen need to be installed to generate the doxygen documentation. Can't go further.")
endif(NOT DOXYGEN_FOUND)

get_target_property(DOXY_DOT_PATH Doxygen::dot IMPORTED_LOCATION)
get_filename_component(DOXY_DOT_PATH "${DOXY_DOT_PATH}" DIRECTORY)
file(TO_NATIVE_PATH "${DOXY_DOT_PATH}" DOXY_DOT_PATH)

set(DOC_SRC_DIR "${CMAKE_SOURCE_DIR}/doc")
set(DOC_BIN_DIR "${CMAKE_BINARY_DIR}/doc")
set(DOC_DEST_DIR "${CMAKE_BINARY_DIR}/doc/${DYABLO_DOC}")

set(DOXY_WARN_AS_ERR "NO")

# ------------------------------------------------
# configure documentation
#-------------------------------------------------

# if the target is doxygen build only doxygen HTML
if(DYABLO_DOC STREQUAL "doxygen")

  set(DOXY_BUILD_HTML "YES")
  set(DOXY_BUILD_XML "NO")
  set(DOXY_OUTPUT_DIR "${DOC_DEST_DIR}")

# otherwise generate only XML doxygen output (used to generate MkDocs page)
else()

  set(DOXY_BUILD_HTML "NO")
  set(DOXY_BUILD_XML "YES")
  set(DOXY_OUTPUT_DIR "${DOC_BIN_DIR}/doxygen")

  # https://git.mel.vin/template/c/issues/50
  # https://bugzilla.gnome.org/show_bug.cgi?id=792676
  set(DOXY_WARN_AS_ERR "NO")

endif()

configure_file(
  "${DOC_SRC_DIR}/doxyfile.in"
  "${DOC_BIN_DIR}/doxyfile"
  @ONLY)


# ------------------------------------------------
# create documentation targets
#-------------------------------------------------
if(DYABLO_DOC STREQUAL "doxygen")

  # ================================
  # DOXYGEN html
  # ================================

  add_custom_target(doc
    COMMAND Doxygen::doxygen "${DOC_BIN_DIR}/doxyfile"
    COMMENT "Generating HTML API documentation with Doxygen")

  add_custom_command(TARGET doc POST_BUILD
    COMMAND ;
    COMMENT "Output at ${DOC_DEST_DIR}/html/index.html")

  add_custom_target(clean_doc
    COMMAND ${CMAKE_COMMAND} -E remove_directory "${DOC_DEST_DIR}")

elseif(DYABLO_DOC STREQUAL "mkdocs")

  # ================================
  # Doxygen XML + MkDocs
  # ================================

  find_program(
    DOXYBOOK2_EXE
    NAMES "doxybook2"
    DOC "Path to doxybook2 executable"
    )
  if(NOT DOXYBOOK2_EXE)
    message(FATAL_ERROR "doxybook2 was not found, please install and make it available in your PATH")
  endif()

  configure_file(
    "${CMAKE_CURRENT_SOURCE_DIR}/mkdocs/mkdocs.yml.in"
    "${CMAKE_CURRENT_BINARY_DIR}/mkdocs/mkdocs.yml")

  configure_file(
    "${CMAKE_CURRENT_SOURCE_DIR}/mkdocs/docs/index.md.in"
    "${CMAKE_CURRENT_BINARY_DIR}/mkdocs/docs/index.md")

  # set doxybook2 command line
  set (DOXYBOOK2_ARGS "--input ${DOXY_OUTPUT_DIR}/xml --output ${DOC_DEST_DIR}/docs --config ${CMAKE_SOURCE_DIR}/doc/mkdocs/.doxybook/config.json")

  add_custom_target(doc

    #DEPENDS copy_files

    # other mkdocs file to copy
    COMMAND ${CMAKE_COMMAND} -E copy
      ${CMAKE_CURRENT_SOURCE_DIR}/mkdocs/docs/introduction.md
      ${CMAKE_CURRENT_BINARY_DIR}/mkdocs/docs/

    COMMAND "${CMAKE_COMMAND}" -E echo "Generating Doxygen XML API documentation"

    COMMAND Doxygen::doxygen "${DOC_BIN_DIR}/doxyfile"

    COMMAND "${CMAKE_COMMAND}" -E echo "Generating ${DYABLO_DOC} sources documentation with doxybook2"

    COMMAND "${CMAKE_COMMAND}" -E echo "${DOXYBOOK2_EXE}" "${DOXYBOOK2_ARGS}"

    COMMAND ${DOXYBOOK2_EXE} --input ${DOXY_OUTPUT_DIR}/xml --output ${DOC_DEST_DIR}/docs --config ${CMAKE_SOURCE_DIR}/doc/mkdocs/.doxybook/config.json
    )

  add_custom_command(TARGET doc POST_BUILD
    COMMAND ;
    COMMENT "Output at ${DOC_DEST_DIR}")

  add_custom_target(clean_doc
    COMMAND ${CMAKE_COMMAND} -E remove_directory "${DOC_DEST_DIR}")

elseif()

  message(WARNING "The only valid values for DOC are : doxygen and mkdocs. No documentation will be generated")

endif()
