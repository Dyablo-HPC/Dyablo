#
# validate this script with:
# https://gitlab.maisondelasimulation.fr/pkestene/dyablo/-/ci/lint
#
image: "arnodurocher/dyablo-ci:cuda-11.0"

stages:
  - build
  - run_all
  - run
  - test

variables:
  GIT_SUBMODULE_STRATEGY: recursive

# Global before and after script to log machine info
before_script:
  - date
  - lscpu

after_script:
  - date

# Build Dyablo
.build_template:
  stage: build
  artifacts:
    paths:
      - build/dyablo/test/solver
      - build/dyablo/unit_test
    expire_in: 1 week

build::openmp:
  extends: .build_template
  tags:
    - docker
  script:
    - .gitlab-ci/build-openmp.sh

.build_cuda_template:
  extends: .build_template
  before_script:
    - date
    - nvcc --version
  tags:
    - docker-cuda
  script:
    - .gitlab-ci/build-cuda.sh

build::cuda:
  extends: .build_cuda_template

build::cuda-10.2:
  extends: .build_cuda_template
  image: "arnodurocher/dyablo-ci:cuda-10.2"
  when: manual

build::cuda-9.2:
  extends: .build_cuda_template
  image: "arnodurocher/dyablo-ci:cuda-9.2"
  when: manual

# Run unit tests
.test_template:
  stage: test
  script: .gitlab-ci/run_unit_tests.sh
  artifacts:
    when: always
    paths:
      - build/dyablo/unit_test/gtest_reports/*.xml
    reports:
      junit: 
      - build/dyablo/unit_test/gtest_reports/*.xml

.openmp_template:
  needs: 
    - build::openmp
  tags:
    - docker

.cuda_template:
  before_script:
    - date
    - lscpu
    - nvidia-smi
  needs: 
    - build::cuda
  tags:
    - docker-cuda

test::openmp:
  extends: 
    - .test_template
    - .openmp_template

test::cuda:
  extends: 
    - .test_template
    - .cuda_template

# Run examples (optional)
# ===============================
.run_template:
  stage: run
  image: "arnodurocher/dyablo-ci:cuda-11.0-visu"
  when: manual
  artifacts:
    paths:
      - "*.png"
    expire_in: 1 week

# Run multiple testcases
# -------------------------
run_all::openmp_4mpi:
  extends:  
    - .run_template
    - .openmp_template
  stage: run_all
  script: 
    - .gitlab-ci/run_and_render_all.sh

run_all::cuda_4mpi:
  extends:  
    - .run_template
    - .cuda_template
  stage: run_all
  script: 
    - .gitlab-ci/run_and_render_all.sh

# Run separate testcases
# -------------------------
# Blast 3D block based testcase
run::blast_3D_block::openmp:
  extends:  
    - .run_template
    - .openmp_template
  script: 
    - .gitlab-ci/run_testcase.sh test_blast_3D_block.ini
    - .gitlab-ci/render.sh visu_blast_3D_block.pvsm

run::blast_3D_block::openmp_4mpi:
  extends:  
    - .run_template
    - .openmp_template
  script: 
    - .gitlab-ci/run_testcase_mpi.sh test_blast_3D_block.ini 4
    - .gitlab-ci/render.sh visu_blast_3D_block.pvsm

run::blast_3D_block::cuda:
  extends:  
    - .run_template
    - .cuda_template
  script: 
    - .gitlab-ci/run_testcase.sh test_blast_3D_block.ini
    - .gitlab-ci/render.sh visu_blast_3D_block.pvsm

run::blast_3D_block::cuda_4mpi:
  extends:  
    - .run_template
    - .cuda_template
  script: 
    - .gitlab-ci/run_testcase_mpi.sh test_blast_3D_block.ini 4
    - .gitlab-ci/render.sh visu_blast_3D_block.pvsm

# Blast 3D cell based testcase
run::blast_3D_cell::openmp:
  extends:  
    - .run_template
    - .openmp_template
  script: 
    - .gitlab-ci/run_testcase.sh test_blast_3D.ini
    - .gitlab-ci/render.sh visu_blast_3D_cell.pvsm

run::blast_3D_cell::openmp_4mpi:
  extends:  
    - .run_template
    - .openmp_template
  script: 
    - .gitlab-ci/run_testcase_mpi.sh test_blast_3D.ini 4
    - .gitlab-ci/render.sh visu_blast_3D_cell.pvsm

# Blast 2D block based testcase
run::blast_2D_block::openmp:
  extends:  
    - .run_template
    - .openmp_template
  script: 
    - .gitlab-ci/run_testcase.sh test_blast_2D_block.ini
    - .gitlab-ci/render.sh visu_blast_2D_block.pvsm

run::blast_2D_block::openmp_4mpi:
  extends:  
    - .run_template
    - .openmp_template
  script: 
    - .gitlab-ci/run_testcase_mpi.sh test_blast_2D_block.ini 4
    - .gitlab-ci/render.sh visu_blast_2D_block.pvsm

run::blast_2D_block::cuda:
  extends:  
    - .run_template
    - .cuda_template
  script: 
    - .gitlab-ci/run_testcase.sh test_blast_2D_block.ini
    - .gitlab-ci/render.sh visu_blast_2D_block.pvsm

run::blast_2D_block::cuda_4mpi:
  extends:  
    - .run_template
    - .cuda_template
  script: 
    - .gitlab-ci/run_testcase_mpi.sh test_blast_2D_block.ini 4
    - .gitlab-ci/render.sh visu_blast_2D_block.pvsm

# Blast 2D cell based testcase
run::blast_2D_cell::openmp:
  extends:  
    - .run_template
    - .openmp_template
  script: 
    - .gitlab-ci/run_testcase.sh test_blast_2D.ini
    - .gitlab-ci/render.sh visu_blast_2D_cell.pvsm

run::blast_2D_cell::openmp_4mpi:
  extends:  
    - .run_template
    - .openmp_template
  script: 
    - .gitlab-ci/run_testcase_mpi.sh test_blast_2D.ini 4
    - .gitlab-ci/render.sh visu_blast_2D_cell.pvsm

# Riemann 2D
run::riemann2d::openmp:
  extends:
    - .run_template
    - .openmp_template
  script: 
    - .gitlab-ci/run_testcase.sh test_riemann_2D.ini
    - .gitlab-ci/render.sh visu_riemann_2D_cell.pvsm

run::riemann2d::cuda:
  extends:
    - .run_template
    - .cuda_template
  script: 
    - .gitlab-ci/run_testcase.sh test_riemann_2D.ini
    - .gitlab-ci/render.sh visu_riemann_2D_cell.pvsm

run::riemann2d_block::openmp:
  extends:
    - .run_template
    - .openmp_template
  script: 
    - .gitlab-ci/run_testcase.sh test_riemann_2D_block.ini
    - .gitlab-ci/render.sh visu_riemann_2D_block.pvsm

run::riemann2d_block::cuda:
  extends:
    - .run_template
    - .cuda_template
  script: 
    - .gitlab-ci/run_testcase.sh test_riemann_2D_block.ini
    - .gitlab-ci/render.sh visu_riemann_2D_block.pvsm


# Read ci/Readme.md for instructions on how to add new testcases





